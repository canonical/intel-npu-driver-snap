name: intel-npu-driver
base: core24
summary: User Mode Driver with Compiler Software for the Intel® NPU
description: |
  User mode driver (UMD) with compiler for the Intel® NPU software stack.
  Intel® NPU device is an AI inference accelerator integrated with Intel
  client CPUs, starting from Intel® Core™ Ultra generation of CPUs (formerly
  known as Meteor Lake). It enables energy-efficient execution of artificial
  neural network tasks. This snap serves primarily as a producer snap providing
  the oneAPI Level-Zero and UMD with compiler libraries. It also distributes
  an app for validating the UMD.
  For more info, see https://github.com/intel/linux-npu-driver
grade: devel
confinement: strict
adopt-info: npu-driver

slots:
  npu-libs:
    interface: content
    content: npu-libs-2404
    read:
      - $SNAP/usr/lib/x86_64-linux-gnu

plugs:
  accel:
    interface: accel
  intel-npu-kmod:
    interface: kernel-module-control
  intel-npu-fw:
    interface: kernel-firmware-control

hooks:
  remove:
    plugs:
      - intel-npu-kmod
      - intel-npu-fw

apps:
  npu-umd-test:
    command: usr/bin/npu-umd-test
    plugs: [accel]

  load-npu-firmware:
    command: usr/bin/load-npu-firmware
    daemon: simple
    install-mode: enable
    restart-condition: on-failure
    restart-delay: 10s
    plugs:
      - intel-npu-kmod
      - intel-npu-fw

parts:

  npu-driver:
    source-type: git
    source: https://github.com/intel/linux-npu-driver.git
    source-tag: v1.10.1
    plugin: cmake
    cmake-parameters:
      - -DENABLE_NPU_COMPILER_BUILD=ON
      - -DCMAKE_INSTALL_PREFIX=/usr
    override-pull: |
      craftctl default
      git submodule update --init --recursive
      craftctl set version="$(git describe --tags | tr -d 'v')"
    build-packages:
      - build-essential
      - git-lfs
      - libudev-dev
      - libboost-all-dev
      - libssl-dev
    stage-packages:
      - libtbb12

  load-npu-firmware:
    plugin: dump
    source: bin/
    organize:
      '*': usr/bin/

lint:
  ignore:
    - library:
      # These are needed but are flagged
      # by the linter because they are not
      # explicitly linked to any binary or
      # shared object, but rather dynamically
      # loaded by apps.
      - usr/lib/x86_64-linux-gnu/libze_validation_layer*
      - usr/lib/x86_64-linux-gnu/libze_intel_vpu*
      - usr/lib/x86_64-linux-gnu/libnpu_driver_compiler*
      - usr/lib/x86_64-linux-gnu/libtbb*
      - usr/lib/x86_64-linux-gnu/libhwloc*
